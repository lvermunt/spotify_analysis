name: Spelling check

on: [push, pull_request]

jobs:
  links:
    name: "Check links"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check links in Markdown files
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          config-file: ".github/workflows/config/mlc_config.json"        

  spelling:
    name: "Spelling check"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Spelling check Markdown files
        uses: rojopolis/spellcheck-github-actions@0.35.0
        with:
          config_path: .github/workflows/config/.spellcheck.yml
          task_name: Markdown
          output_file: markdown_spellcheck-output.txt

      - name: Spelling check Python files
        if: always()
        uses: rojopolis/spellcheck-github-actions@0.35.0
        with:
          config_path: .github/workflows/config/.spellcheck.yml
          task_name: Python
          output_file: python_spellcheck.txt

      - name: Create summary
        if: always()
        run: |
          function create_summary {
            status=`cat $2_spellcheck.txt | grep "Spelling check" | cut -d ' ' -f 3 | tr -d '!'`
            if [ "$status" == "passed" ]; then echo 0; else echo 1; fi

            echo "## $1 Check" >> $GITHUB_STEP_SUMMARY
            echo "Spell check ${status}." >> $GITHUB_STEP_SUMMARY

            echo "Output for $1 files:" >> $GITHUB_STEP_SUMMARY
            echo '```text' >> $GITHUB_STEP_SUMMARY
            cat $2_spellcheck.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          }

          md_status=`create_summary Markdown markdown`
          py_status=`create_summary Python python`

          if [ ! "$md_status" -eq 0 ]; then exit 1; fi
          if [ ! "$py_status" -eq 0 ]; then exit 5; fi
